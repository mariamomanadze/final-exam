**
1. SQL server connect to SQL Server Management Studio.
2. create Database
Database (new database)
databasename - mydb
NEw Query

create table todo()
id int identity (1,1),
task varchar(100)
)

click execute (naxe sheiqmna tuara)

select * from todo

insert into todo values ('buy fruits');
insert into todo values ('buy books');

execute naxe bolo ori insert monishne da (unda gamoitanos 1 row affected)

mere selectidan monishne da unda gamoitanos 'rac dawere'

**
start creating net core web API project 
sheqmeni folderi kompshi >> api

Open Visual Studio >> Create New Project

choose .net core web api project

projectname WebApplication1
location (faili sadac sheqmeni misamarti) (vqtvat >> D:\tutorial\api)
https configure amorte da create project

Created

Webapplication > Dependencies > Packages > Managet Nuget packages >> browse
System.Data.SqlClient
newtonsoftjson (Microsoft.AspNetCore.Mvc.NewtonsoftJson

packages are installed

**

Propertis >> lauchSettings.json

Api development porti shecvale 8000-it

**

>> Program.cs
add Json serializers settings da enable cors

var builder = WebApplication.CreateBuilder(args);

// Add services to the container.

builder.Services.AddControllers();
// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen();

//JSON Serializer
builder.Services.AddControllersWithViews().AddNewtonsoftJson();

var app = builder.Build();

//Enable CORS
app.UseCors(x => x.AllowAnyHeader().AllowAnyOrigin().AllowAnyMethod());

// Configure the HTTP request pipeline.
if (app.Environment.IsDevelopment())
{
    app.UseSwagger();
    app.UseSwaggerUI();
}

app.UseAuthorization();

app.MapControllers();

app.Run();

** 

>>Conrollers >> Add >> Contollers >> API >> API COntroller Empty >> (daarqvi TodoController.cs)

remove Route ... 

using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;

namespace WebApplication1.Controllers
{
    
    [ApiController]
    public class TodoController : ControllerBase
    {
    }
}

**

add SQL Server Connection details

>> appsettings.json

{
  "ConnectionStrings": {
    "mydb": "Server=test-vm \\SQLEXPRESS;Initial Catalog=mydb;Integrated Security=True"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*"
}

**

TodoControllers.cs

using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using System.Data;
using System.Data.SqlClient;

namespace WebApplication1.Controllers
{

    [ApiController]
    public class TodoController : ControllerBase
    {

        private IConfiguration _configuration;

        public TodoController(IConfiguration configuration)
        {
            _configuration = configuration;
        }

        [HttpGet("get_tasks")]

        public JsonResult get_tasks()
        {
            string query = "select * from todo";
            DataTable table = new DataTable();
            string SqlDatasource = _configuration.GetConnectionString("mydb");
            SqlDataReader myReader;
            using (SqlConnection myCon = new SqlConnection(SqlDatasource))
            {
                myCon.Open();
                using (SqlCommand myCommand = new SqlCommand(query, myCon))
                {
                    myReader = myCommand.ExecuteReader();
                    table.Load(myReader);
                }
            }

            return new JsonResult(table);

        }

        [HttpPost("add_task")]

        public JsonResult add_task([FromForm] string task)
        {
            string query = "insert into todo values (@task)";
            DataTable table = new DataTable();
            string SqlDatasource = _configuration.GetConnectionString("mydb");
            SqlDataReader myReader;
            using (SqlConnection myCon = new SqlConnection(SqlDatasource))
            {
                myCon.Open();
                using (SqlCommand myCommand = new SqlCommand(query, myCon))
                {
                    myCommand.Parameters.AddWithValue("@task", task);
                    myReader = myCommand.ExecuteReader();
                    table.Load(myReader);
                }
            }

            return new JsonResult("Added Successfully");
        }

        [HttpPost("delete_task")]

        public JsonResult delete_task([FromForm] string id)
        {
            string query = "delete from todo where id=@id";
            DataTable table = new DataTable();
            string SqlDatasource = _configuration.GetConnectionString("mydb");
            SqlDataReader myReader;
            using (SqlConnection myCon = new SqlConnection(SqlDatasource))
            {
                myCon.Open();
                using (SqlCommand myCommand = new SqlCommand(query, myCon))
                {
                    myCommand.Parameters.AddWithValue("@id", id);
                    myReader = myCommand.ExecuteReader();
                    table.Load(myReader);
                }
            }

            return new JsonResult("Deleted Successfully");
        }
    }
}

***

API Project is completed

***

Start Working Angular Project

>> sadac api faili sheqmeni davamatot "ui" faili

sadac sheqmeni monishne zemot mdebaoreba da + cmd enter ( gaxsnis command lines)

Command line >> ng new todo

packagebi unda daaistaliros

cd todo
code .

da gdagiyvans visual studio codshi ( aq app-shi chans sheni aplikacia)

isev command lineshi gavushvat
ng serve --o

da gamochndeba rogoria sheni aplikacia

***

visual studioshi >> app >> app.component.html >> washale yvelaferi da dawere

<div style="margin:100px">
<h2 style="background-color: aqua; text-align: center;">Todo App</h2>

</div>

***
mere app.comtonents.ts

import { Component } from '@angular/core';
import { RouterOutlet } from '@angular/router';

import { CommonModule } from '@angular/common'; 
import {HttpClientModule, HttpClient } from '@angular/common/http';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';


@Component({
  selector: 'app-root',
  standalone: true,
  imports: [RouterOutlet, CommonModule, HttpClientModule],
  templateUrl: './app.component.html',
  styleUrl: './app.component.css'
})
export class AppComponent {
  title = 'todo';

  tasks:any=[];

  APIURL="http://localhost:800/";

  constructor(private http:HttpClient){}

  ngOnInit(){
    this.get_tasks();
  }

  get_tasks(){
    this.http.get(this.APIURL+"get_tasks").subscribe((res)=>{
      this.tasks=res;
    })
  }

  add_task(){
    let body=new FormData();
    body.append('task', this.newtask);
    this.http.post(this.APIURL+"add_task",body).subscribe((res)=>{
      alert(res)
      this.newtask="";
      this.get_tasks();
    })
  }

  delete_task(id:any){
    let body=new FormData();
    body.append('id',id);
    this.http.post(this.APIURL+"delete_task",body).subscribe((res)=>{
      alert(res)
      this.get_tasks();
    })
  }

}


***

app component html


<div style="margin:100px">
<h2 style="background-color: aqua; text-align: center;">Todo App</h2>

<input type="text" [(ngmodel)]="newtask"><button (click)="add_task()">>Add Task</button>

<p * ngFor="let item of tasks">
  &diams;{{item.tasks}}
  <button (click)="delete_task(item.id)">Delete Task</button>
</p>

</div>

